{"ast":null,"code":"var _jsxFileName = \"/home/luciano_pti/\\xC1rea de Trabalho/Projetos/Somare-Web/Front/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState, useCallback } from \"react\";\nimport Webcam from \"react-webcam\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const webcamRef = useRef(null);\n  const ws = useRef(null);\n  const [camMestre, setCamMestre] = useState(\"block\"); // const [capturedImg, setCapturedImg] = useState(null);\n\n  const [prediction, setPrediction] = useState(\"\");\n  const [player, setPlayer] = useState(\"\");\n  const [isPaused, setPause] = useState(false);\n  useEffect(() => {\n    const client_id = Date.now();\n    const url = `ws://localhost:8000/emo_ws/{` + client_id + `}`;\n    console.log(url);\n    ws.current = new WebSocket(url);\n\n    ws.current.onopen = () => console.log(\"ws opened\");\n\n    ws.current.onclose = () => console.log(\"ws closed\");\n\n    return () => {\n      ws.current.close();\n    };\n  }, []);\n  useEffect(() => {\n    if (!ws.current) return;\n\n    ws.current.onmessage = event => {\n      if (isPaused) return;\n      const message = JSON.parse(event.data);\n      console.log(message);\n\n      if (message.current_player) {\n        setPlayer(message.current_player);\n      }\n\n      setPrediction(message.emocao);\n    };\n  }, [isPaused]);\n\n  function sendMessage(msg) {\n    if (!ws.current) return;\n    ws.current.send(msg);\n  }\n\n  const videoConstraints = {\n    width: 1280,\n    height: 720,\n    facingMode: \"environment\" // Can be \"environment\" or \"user\"\n\n  };\n  const capture = useCallback(() => {\n    if (webcamRef.current) {\n      const capturedImg = webcamRef.current.getScreenshot();\n      sendMessage(capturedImg);\n    }\n  }, [webcamRef]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: player\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: camMestre\n      },\n      children: /*#__PURE__*/_jsxDEV(Webcam, {\n        audio: false,\n        height: 400,\n        ref: webcamRef,\n        screenshotFormat: \"image/jpeg\",\n        width: 600,\n        videoConstraints: videoConstraints\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: capture,\n        children: \"Capture photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: prediction && prediction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"6OUu2wAS+eUduOWrd/MDZjr7rnM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/luciano_pti/√Årea de Trabalho/Projetos/Somare-Web/Front/src/App.tsx"],"names":["React","useEffect","useRef","useState","useCallback","Webcam","App","webcamRef","ws","camMestre","setCamMestre","prediction","setPrediction","player","setPlayer","isPaused","setPause","client_id","Date","now","url","console","log","current","WebSocket","onopen","onclose","close","onmessage","event","message","JSON","parse","data","current_player","emocao","sendMessage","msg","send","videoConstraints","width","height","facingMode","capture","capturedImg","getScreenshot","display"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from \"react\";\nimport Webcam from \"react-webcam\";\n\nfunction App() {\n\n  const webcamRef = useRef<Webcam>(null);\n  const ws = useRef<any>(null);\n  const [camMestre, setCamMestre] = useState(\"block\")\n\n\n  // const [capturedImg, setCapturedImg] = useState(null);\n  const [prediction, setPrediction] = useState(\"\");\n  const [player, setPlayer] = useState(\"\")\n\n  const [isPaused, setPause] = useState(false);\n\n  useEffect(() => {\n    const client_id = Date.now();\n    const url = `ws://localhost:8000/emo_ws/{`+client_id+`}`;\n    console.log(url);\n  \n    ws.current = new WebSocket(url);\n    ws.current.onopen = () => console.log(\"ws opened\");\n    ws.current.onclose = () => console.log(\"ws closed\");\n\n    return () => {\n      ws.current.close();\n    };\n  \n  \n  }, []);\n\n  useEffect(() => {\n    if (!ws.current) return;\n\n    ws.current.onmessage = (event: any) => {\n      if (isPaused) return;\n      const message = JSON.parse(event.data);\n      console.log(message);\n      if(message.current_player){\n        setPlayer(message.current_player)\n      }\n      setPrediction(message.emocao);\n    };\n  }, [isPaused]);\n\n  function sendMessage(msg: any) {\n    if (!ws.current) return;\n    ws.current.send(msg);\n  }\n\n  const videoConstraints = {\n    width: 1280,\n    height: 720,\n    facingMode: \"environment\", // Can be \"environment\" or \"user\"\n  };\n\n  const capture = useCallback(() => {\n    if (webcamRef.current) {\n      const capturedImg = webcamRef.current.getScreenshot();\n      sendMessage(capturedImg);\n    }\n  }, [webcamRef]);\n\n  \n  return (\n    <div className=\"\">\n      <h1>{player}</h1>\n      <div style={{display: camMestre}}>\n      <Webcam\n        audio={false}\n        height={400}\n        ref={webcamRef}\n        screenshotFormat=\"image/jpeg\"\n        width={600}\n        videoConstraints={videoConstraints}\n      />\n      </div>\n      \n      <p>\n        <button onClick={capture}>Capture photo</button>\n      </p>\n      {/* <img src=\"\" alt=\"\" /> */}\n      <h3>{prediction && prediction}</h3>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}