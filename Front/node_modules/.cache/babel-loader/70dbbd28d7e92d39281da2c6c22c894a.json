{"ast":null,"code":"var _jsxFileName = \"/home/luciano_pti/\\xC1rea de Trabalho/Projetos/Somare-Web/Front/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState, useCallback } from \"react\";\nimport Webcam from \"react-webcam\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const webcamRef = useRef(null);\n  const ws = useRef(null);\n  const [camMestre, setCamMestre] = useState(\"block\");\n  const [capturedImg, setCapturedImg] = useState(null);\n  const [prediction, setPrediction] = useState(\"\");\n  const [player, setPlayer] = useState(\"\");\n  const [isPaused, setPause] = useState(false);\n  useEffect(() => {\n    const client_id = Date.now();\n    const url = `ws://localhost:8000/emo_ws/{` + client_id + `}`;\n    console.log(url);\n    ws.current = new WebSocket(url);\n\n    ws.current.onopen = () => console.log(\"ws opened\");\n\n    ws.current.onclose = () => console.log(\"ws closed\");\n\n    return () => {\n      ws.current.close();\n    };\n  }, []);\n  useEffect(() => {\n    if (!ws.current) return;\n\n    ws.current.onmessage = event => {\n      if (isPaused) return;\n      const message = JSON.parse(event.data);\n      console.log(message);\n\n      if (message.current_player) {\n        setPlayer(message.current_player);\n      }\n\n      setPrediction(message.emocao);\n    };\n  }, [isPaused]);\n\n  function sendMessage(msg) {\n    if (!ws.current) return;\n    ws.current.send(msg);\n  }\n\n  function Greeting(props) {\n    if (capturedImg !== null) {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: capturedImg,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Webcam, {\n      audio: false,\n      height: 400,\n      ref: webcamRef,\n      screenshotFormat: \"image/jpeg\",\n      width: 600,\n      videoConstraints: videoConstraints\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }, this);\n  }\n\n  const videoConstraints = {\n    width: 1280,\n    height: 720,\n    facingMode: \"environment\" // Can be \"environment\" or \"user\"\n\n  };\n  const capture = useCallback(() => {\n    if (webcamRef.current) {\n      const capturedImg = webcamRef.current.getScreenshot();\n      sendMessage(capturedImg);\n      setCapturedImg(capturedImg);\n    }\n  }, [webcamRef]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: player\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: capture,\n        children: \"Capture photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Greeting, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: prediction && prediction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Z66HLzCu0+NqMTsArfwomFEh8U8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/luciano_pti/√Årea de Trabalho/Projetos/Somare-Web/Front/src/App.tsx"],"names":["React","useEffect","useRef","useState","useCallback","Webcam","App","webcamRef","ws","camMestre","setCamMestre","capturedImg","setCapturedImg","prediction","setPrediction","player","setPlayer","isPaused","setPause","client_id","Date","now","url","console","log","current","WebSocket","onopen","onclose","close","onmessage","event","message","JSON","parse","data","current_player","emocao","sendMessage","msg","send","Greeting","props","videoConstraints","width","height","facingMode","capture","getScreenshot"],"mappings":"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","sourcesContent":["import { render } from \"@testing-library/react\";\nimport React, { useEffect, useRef, useState, useCallback } from \"react\";\nimport Webcam from \"react-webcam\";\n\nfunction App() {\n\n  const webcamRef = useRef<Webcam>(null);\n  const ws = useRef<any>(null);\n  const [camMestre, setCamMestre] = useState(\"block\")\n\n\n  const [capturedImg, setCapturedImg] = useState<any>(null);\n  const [prediction, setPrediction] = useState(\"\");\n  const [player, setPlayer] = useState(\"\")\n\n  const [isPaused, setPause] = useState(false);\n\n  useEffect(() => {\n    const client_id = Date.now();\n    const url = `ws://localhost:8000/emo_ws/{`+client_id+`}`;\n    console.log(url);\n  \n    ws.current = new WebSocket(url);\n    ws.current.onopen = () => console.log(\"ws opened\");\n    ws.current.onclose = () => console.log(\"ws closed\");\n\n    return () => {\n      ws.current.close();\n    };\n  \n  \n  }, []);\n\n  useEffect(() => {\n    if (!ws.current) return;\n\n    ws.current.onmessage = (event: any) => {\n      if (isPaused) return;\n      const message = JSON.parse(event.data);\n      console.log(message);\n      if(message.current_player){\n        setPlayer(message.current_player)\n      }\n      setPrediction(message.emocao);\n    };\n  }, [isPaused]);\n\n  function sendMessage(msg: any) {\n    if (!ws.current) return;\n    ws.current.send(msg);\n  }\n\n  function Greeting(props: any){\n    if (capturedImg !== null){\n      return <img src={capturedImg} alt=\"\" />\n    }\n    return <Webcam\n              audio={false}\n              height={400}\n              ref={webcamRef}\n              screenshotFormat=\"image/jpeg\"\n              width={600}\n              videoConstraints={videoConstraints}\n            /> \n  }\n\n  const videoConstraints = {\n    width: 1280,\n    height: 720,\n    facingMode: \"environment\", // Can be \"environment\" or \"user\"\n  };\n\n  const capture = useCallback(() => {\n    if (webcamRef.current) {\n      const capturedImg = webcamRef.current.getScreenshot();\n      sendMessage(capturedImg);\n      setCapturedImg(capturedImg)\n    }\n  }, [webcamRef]);\n\n  return (\n    <div className=\"\">\n      <h1>{player}</h1>\n      <p>\n        <button onClick={capture}>Capture photo</button>\n      </p>\n      <Greeting /> \n      <h3>{prediction && prediction}</h3>\n    </div>\n  );\n  \n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}