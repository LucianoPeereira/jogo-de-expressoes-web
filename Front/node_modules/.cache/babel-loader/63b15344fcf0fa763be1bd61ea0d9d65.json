{"ast":null,"code":"import _slicedToArray from\"/home/luciano_pti/\\xC1rea de Trabalho/Projetos/front-SOMARE/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useRef,useState,useCallback}from\"react\";import Webcam from\"react-webcam\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var webcamRef=useRef(null);var ws=useRef(null);var _useState=useState(\"block\"),_useState2=_slicedToArray(_useState,2),camMestre=_useState2[0],setCamMestre=_useState2[1];// const [capturedImg, setCapturedImg] = useState(null);\nvar _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),prediction=_useState4[0],setPrediction=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),player=_useState6[0],setPlayer=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isPaused=_useState8[0],setPause=_useState8[1];useEffect(function(){var client_id=Date.now();var url=\"ws://localhost:8000/emo_ws/{\"+client_id+\"}\";console.log(url);ws.current=new WebSocket(url);ws.current.onopen=function(){return console.log(\"ws opened\");};ws.current.onclose=function(){return console.log(\"ws closed\");};return function(){ws.current.close();};},[]);useEffect(function(){if(!ws.current)return;ws.current.onmessage=function(event){if(isPaused)return;var message=JSON.parse(event.data);console.log(message);if(message.current_player){setPlayer(message.current_player);}setPrediction(message.emocao);};},[isPaused]);function sendMessage(msg){if(!ws.current)return;ws.current.send(msg);}var videoConstraints={width:1280,height:720,facingMode:\"environment\"// Can be \"environment\" or \"user\"\n};var capture=useCallback(function(){if(webcamRef.current){var capturedImg=webcamRef.current.getScreenshot();sendMessage(capturedImg);}},[webcamRef]);return/*#__PURE__*/_jsxs(\"div\",{className:\"\",children:[/*#__PURE__*/_jsx(\"h1\",{children:player}),/*#__PURE__*/_jsx(\"div\",{style:{display:camMestre},children:/*#__PURE__*/_jsx(Webcam,{audio:false,height:400,ref:webcamRef,screenshotFormat:\"image/jpeg\",width:600,videoConstraints:videoConstraints})}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:capture,children:\"Capture photo\"})}),/*#__PURE__*/_jsx(\"h3\",{children:prediction&&prediction})]});}export default App;","map":{"version":3,"sources":["/home/luciano_pti/√Årea de Trabalho/Projetos/front-SOMARE/src/App.tsx"],"names":["React","useEffect","useRef","useState","useCallback","Webcam","App","webcamRef","ws","camMestre","setCamMestre","prediction","setPrediction","player","setPlayer","isPaused","setPause","client_id","Date","now","url","console","log","current","WebSocket","onopen","onclose","close","onmessage","event","message","JSON","parse","data","current_player","emocao","sendMessage","msg","send","videoConstraints","width","height","facingMode","capture","capturedImg","getScreenshot","display"],"mappings":"iJAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,MAA3B,CAAmCC,QAAnC,CAA6CC,WAA7C,KAAgE,OAAhE,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,C,wFAEA,QAASC,CAAAA,GAAT,EAAe,CAEb,GAAMC,CAAAA,SAAS,CAAGL,MAAM,CAAS,IAAT,CAAxB,CACA,GAAMM,CAAAA,EAAE,CAAGN,MAAM,CAAM,IAAN,CAAjB,CACA,cAAkCC,QAAQ,CAAC,OAAD,CAA1C,wCAAOM,SAAP,eAAkBC,YAAlB,eAGA;AACA,eAAoCP,QAAQ,CAAC,EAAD,CAA5C,yCAAOQ,UAAP,eAAmBC,aAAnB,eACA,eAA4BT,QAAQ,CAAC,EAAD,CAApC,yCAAOU,MAAP,eAAeC,SAAf,eAEA,eAA6BX,QAAQ,CAAC,KAAD,CAArC,yCAAOY,QAAP,eAAiBC,QAAjB,eAEAf,SAAS,CAAC,UAAM,CACd,GAAMgB,CAAAA,SAAS,CAAGC,IAAI,CAACC,GAAL,EAAlB,CACA,GAAMC,CAAAA,GAAG,CAAG,+BAA+BH,SAA/B,IAAZ,CACAI,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAEAZ,EAAE,CAACe,OAAH,CAAa,GAAIC,CAAAA,SAAJ,CAAcJ,GAAd,CAAb,CACAZ,EAAE,CAACe,OAAH,CAAWE,MAAX,CAAoB,iBAAMJ,CAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,CAAN,EAApB,CACAd,EAAE,CAACe,OAAH,CAAWG,OAAX,CAAqB,iBAAML,CAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,CAAN,EAArB,CAEA,MAAO,WAAM,CACXd,EAAE,CAACe,OAAH,CAAWI,KAAX,GACD,CAFD,CAKD,CAdQ,CAcN,EAdM,CAAT,CAgBA1B,SAAS,CAAC,UAAM,CACd,GAAI,CAACO,EAAE,CAACe,OAAR,CAAiB,OAEjBf,EAAE,CAACe,OAAH,CAAWK,SAAX,CAAuB,SAACC,KAAD,CAAgB,CACrC,GAAId,QAAJ,CAAc,OACd,GAAMe,CAAAA,OAAO,CAAGC,IAAI,CAACC,KAAL,CAAWH,KAAK,CAACI,IAAjB,CAAhB,CACAZ,OAAO,CAACC,GAAR,CAAYQ,OAAZ,EACA,GAAGA,OAAO,CAACI,cAAX,CAA0B,CACxBpB,SAAS,CAACgB,OAAO,CAACI,cAAT,CAAT,CACD,CACDtB,aAAa,CAACkB,OAAO,CAACK,MAAT,CAAb,CACD,CARD,CASD,CAZQ,CAYN,CAACpB,QAAD,CAZM,CAAT,CAcA,QAASqB,CAAAA,WAAT,CAAqBC,GAArB,CAA+B,CAC7B,GAAI,CAAC7B,EAAE,CAACe,OAAR,CAAiB,OACjBf,EAAE,CAACe,OAAH,CAAWe,IAAX,CAAgBD,GAAhB,EACD,CAED,GAAME,CAAAA,gBAAgB,CAAG,CACvBC,KAAK,CAAE,IADgB,CAEvBC,MAAM,CAAE,GAFe,CAGvBC,UAAU,CAAE,aAAe;AAHJ,CAAzB,CAMA,GAAMC,CAAAA,OAAO,CAAGvC,WAAW,CAAC,UAAM,CAChC,GAAIG,SAAS,CAACgB,OAAd,CAAuB,CACrB,GAAMqB,CAAAA,WAAW,CAAGrC,SAAS,CAACgB,OAAV,CAAkBsB,aAAlB,EAApB,CACAT,WAAW,CAACQ,WAAD,CAAX,CACD,CACF,CAL0B,CAKxB,CAACrC,SAAD,CALwB,CAA3B,CAQA,mBACE,aAAK,SAAS,CAAC,EAAf,wBACE,oBAAKM,MAAL,EADF,cAEE,YAAK,KAAK,CAAE,CAACiC,OAAO,CAAErC,SAAV,CAAZ,uBACA,KAAC,MAAD,EACE,KAAK,CAAE,KADT,CAEE,MAAM,CAAE,GAFV,CAGE,GAAG,CAAEF,SAHP,CAIE,gBAAgB,CAAC,YAJnB,CAKE,KAAK,CAAE,GALT,CAME,gBAAgB,CAAEgC,gBANpB,EADA,EAFF,cAaE,gCACE,eAAQ,OAAO,CAAEI,OAAjB,2BADF,EAbF,cAiBE,oBAAKhC,UAAU,EAAIA,UAAnB,EAjBF,GADF,CAqBD,CAED,cAAeL,CAAAA,GAAf","sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from \"react\";\nimport Webcam from \"react-webcam\";\n\nfunction App() {\n\n  const webcamRef = useRef<Webcam>(null);\n  const ws = useRef<any>(null);\n  const [camMestre, setCamMestre] = useState(\"block\")\n\n\n  // const [capturedImg, setCapturedImg] = useState(null);\n  const [prediction, setPrediction] = useState(\"\");\n  const [player, setPlayer] = useState(\"\")\n\n  const [isPaused, setPause] = useState(false);\n\n  useEffect(() => {\n    const client_id = Date.now();\n    const url = `ws://localhost:8000/emo_ws/{`+client_id+`}`;\n    console.log(url);\n  \n    ws.current = new WebSocket(url);\n    ws.current.onopen = () => console.log(\"ws opened\");\n    ws.current.onclose = () => console.log(\"ws closed\");\n\n    return () => {\n      ws.current.close();\n    };\n  \n  \n  }, []);\n\n  useEffect(() => {\n    if (!ws.current) return;\n\n    ws.current.onmessage = (event: any) => {\n      if (isPaused) return;\n      const message = JSON.parse(event.data);\n      console.log(message);\n      if(message.current_player){\n        setPlayer(message.current_player)\n      }\n      setPrediction(message.emocao);\n    };\n  }, [isPaused]);\n\n  function sendMessage(msg: any) {\n    if (!ws.current) return;\n    ws.current.send(msg);\n  }\n\n  const videoConstraints = {\n    width: 1280,\n    height: 720,\n    facingMode: \"environment\", // Can be \"environment\" or \"user\"\n  };\n\n  const capture = useCallback(() => {\n    if (webcamRef.current) {\n      const capturedImg = webcamRef.current.getScreenshot();\n      sendMessage(capturedImg);\n    }\n  }, [webcamRef]);\n\n  \n  return (\n    <div className=\"\">\n      <h1>{player}</h1>\n      <div style={{display: camMestre}}>\n      <Webcam\n        audio={false}\n        height={400}\n        ref={webcamRef}\n        screenshotFormat=\"image/jpeg\"\n        width={600}\n        videoConstraints={videoConstraints}\n      />\n      </div>\n      \n      <p>\n        <button onClick={capture}>Capture photo</button>\n      </p>\n      {/* <img src=\"\" alt=\"\" /> */}\n      <h3>{prediction && prediction}</h3>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}